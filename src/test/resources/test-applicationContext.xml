<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    <!--    <bean id="connectionMaker" class="kang.onezero.tobyspring.user.dao.DConnectionMaker"/>-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/toby_spring" />
        <property name="username" value="root" />
        <property name="password" value="1234" />
    </bean>
    <bean id="userDao" class="kang.onezero.tobyspring.user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userServiceImpl" />
        <!--
        어드바이스와 어드바이저를 동시에 설정해줄 수 있는 프로퍼티.
        리스트에 어드바이스나 어드바이저의 빈 아이디를 값으로 넣어주면 된다.
        기존의 ref 속성을 사용하는 DI와는 방식이 다름에 주의해야 한다.    -->
        <property name="interceptorNames">
            <list>
                <value>transactionAdvisor</value>
            </list>
        </property>
    </bean>
    <bean id="userServiceImpl" class="kang.onezero.tobyspring.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao" />
        <property name="mailSender" ref="mailSender" />
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="mailSender" class="kang.onezero.tobyspring.user.service.DummyMailSender"/>

    <bean id="transactionAdvice" class="kang.onezero.tobyspring.user.service.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
        <property name="mappedName" value="upgrade*" />
    </bean>

    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice" />
        <property name="pointcut" ref="transactionPointcut" />
    </bean>
</beans>